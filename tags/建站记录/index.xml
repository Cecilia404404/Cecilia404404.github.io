<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>建站记录 on Cecilia的博客</title><link>https://springcecilia.blog/tags/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/</link><description>Recent content in 建站记录 on Cecilia的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 17 Dec 2023 17:34:26 +0800</lastBuildDate><atom:link href="https://springcecilia.blog/tags/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/index.xml" rel="self" type="application/rss+xml"/><item><title>【建站6】装修博客(待更新)</title><link>https://springcecilia.blog/%E5%BB%BA%E7%AB%996%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/</link><pubDate>Sun, 17 Dec 2023 17:34:26 +0800</pubDate><guid>https://springcecilia.blog/%E5%BB%BA%E7%AB%996%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/</guid><description>&lt;p>注：博主使用的主题为stack。&lt;/p>
&lt;h1 id="修改字体">修改字体&lt;/h1>
&lt;p>参考教程：&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.gezi.men/p/hugo-custom-global-font/" target="_blank" rel="noopener"
>https://blog.gezi.men/p/hugo-custom-global-font/&lt;/a>&lt;/p>
&lt;p>补充：&lt;/p>
&lt;p>&lt;a class="link" href="https://w3c.github.io/clreq/" target="_blank" rel="noopener"
>中文排版需求&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/lxgw/LxgwWenKai" target="_blank" rel="noopener"
>霞鹜文楷&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/mzlogin/chinese-copywriting-guidelines" target="_blank" rel="noopener"
>中文文案排版指北&lt;/a>&lt;/p>
&lt;h1 id="修改背景色">修改背景色&lt;/h1>
&lt;p>参考教程：
&lt;a class="link" href="https://oxidane-uni.github.io/p/%E4%BD%BF%E7%94%A8-hugo-%E5%AF%B9%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%87%8D%E5%BB%BA%E4%B8%8E-stack-%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95/#%E6%94%B9%E5%96%84%E6%B5%85%E8%89%B2%E6%A8%A1%E5%BC%8F%E5%8F%AF%E8%AF%BB%E6%80%A7" target="_blank" rel="noopener"
>https://oxidane-uni.github.io/p/%E4%BD%BF%E7%94%A8-hugo-%E5%AF%B9%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%87%8D%E5%BB%BA%E4%B8%8E-stack-%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95/#%E6%94%B9%E5%96%84%E6%B5%85%E8%89%B2%E6%A8%A1%E5%BC%8F%E5%8F%AF%E8%AF%BB%E6%80%A7&lt;/a>&lt;/p>
&lt;h1 id="添加相册">添加相册&lt;/h1>
&lt;p>参考教程：&lt;/p>
&lt;p>&lt;a class="link" href="https://immmmm.com/hugo-readdir-photos/" target="_blank" rel="noopener"
>https://immmmm.com/hugo-readdir-photos/&lt;/a>&lt;/p>
&lt;h1 id="添加动画">添加动画&lt;/h1>
&lt;p>参考教程：&lt;/p>
&lt;p>&lt;a class="link" href="https://lbqaq.top/p/%E7%BB%99blog%E5%A2%9E%E5%8A%A0%E5%8A%A8%E7%94%BB/#4%E8%8F%9C%E5%8D%95%E7%BC%A9%E6%94%BE" target="_blank" rel="noopener"
>https://lbqaq.top/p/%E7%BB%99blog%E5%A2%9E%E5%8A%A0%E5%8A%A8%E7%94%BB/#4%E8%8F%9C%E5%8D%95%E7%BC%A9%E6%94%BE&lt;/a>&lt;/p>
&lt;h1 id="添加打字动画">添加打字动画&lt;/h1>
&lt;p>参考教程：&lt;/p>
&lt;p>&lt;a class="link" href="https://shishuochen.gitee.io/2020/uffick8u1/#8-subtitle%E6%89%93%E5%AD%97%E6%9C%BA%E6%98%BE%E7%A4%BA" target="_blank" rel="noopener"
>https://shishuochen.gitee.io/2020/uffick8u1/#8-subtitle打字机显示&lt;/a>&lt;/p>
&lt;p>我的改法：
在D:\blog\myblog\themes\hugo-theme-stack\layouts的index.html开头贴上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{{&lt;/span> &lt;span class="nx">define&lt;/span> &lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">html&lt;/span> &lt;span class="nx">or&lt;/span> &lt;span class="nx">home&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">html&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;font-size: 3rem; text-align: center; font-weight: bold;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c1">// 设置想打的字的样式，3rem是大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="nx">other&lt;/span> &lt;span class="nx">HTML&lt;/span> &lt;span class="nx">content&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">divTyping&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;#text p&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 修改为适当的时间间隔，以控制打字速度
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Humo sum, humani nihil ame alienum puton.&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 修改为自己想打的字
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">typing&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">divTyping&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;_&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">typing&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">timer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">divTyping&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 结束打字，移除 _ 光标
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">clearTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">timer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">typing&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现暗色模式下文字不会跟着变色，因此还需要再改&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{{&lt;/span> &lt;span class="nx">define&lt;/span> &lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">html&lt;/span> &lt;span class="nx">or&lt;/span> &lt;span class="nx">home&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">html&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;font-size: 3rem; text-align: center; font-weight: bold; color: var(--card-text-color-secondary);&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">在这里替换为你想要的颜色变量&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="nx">other&lt;/span> &lt;span class="nx">HTML&lt;/span> &lt;span class="nx">content&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">divTyping&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;#text p&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 修改为适当的时间间隔，以控制打字速度
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Humo sum, humani nihil ame alienum puton.&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 修改为自己想打的字
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">typing&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">divTyping&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;_&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">typing&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">timer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">divTyping&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 结束打字，移除 _ 光标
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">clearTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">timer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">typing&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="添加返回到顶部插件">添加返回到顶部插件&lt;/h1>
&lt;p>参考教程：&lt;/p>
&lt;p>&lt;a class="link" href="https://ponder.lol/2023/custom-hugo-theme-stack/#%e8%bf%94%e5%9b%9e%e9%a1%b6%e9%83%a8%e6%8c%89%e9%92%ae" target="_blank" rel="noopener"
>https://ponder.lol/2023/custom-hugo-theme-stack/#%e8%bf%94%e5%9b%9e%e9%a1%b6%e9%83%a8%e6%8c%89%e9%92%ae&lt;/a>&lt;/p>
&lt;h1 id="显示统计文章发布数量">显示/统计文章发布数量&lt;/h1>
&lt;p>参考教程：&lt;/p>
&lt;p>&lt;a class="link" href="https://thirdshire.com/hugo-stack-renovation/#%E6%80%BB%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%8F%91%E8%A1%A8%E4%BA%86x%E7%AF%87%E6%96%87%E7%AB%A0%E5%85%B1%E8%AE%A1x%E5%AD%97" target="_blank" rel="noopener"
>https://thirdshire.com/hugo-stack-renovation/#总字数统计发表了x篇文章共计x字&lt;/a>&lt;/p></description></item><item><title>【建站5】域名购买+DNS解析</title><link>https://springcecilia.blog/%E5%BB%BA%E7%AB%995%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0-DNS%E8%A7%A3%E6%9E%90/</link><pubDate>Sat, 16 Dec 2023 17:34:26 +0800</pubDate><guid>https://springcecilia.blog/%E5%BB%BA%E7%AB%995%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0-DNS%E8%A7%A3%E6%9E%90/</guid><description>&lt;h1 id="域名购买与配置">域名购买与配置&lt;/h1>
&lt;p>&lt;strong>域名对比，我选的是namesilo：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://shannote.com/archives/buy-foreign-domains.html" target="_blank" rel="noopener"
>https://shannote.com/archives/buy-foreign-domains.html&lt;/a>&lt;/p>
&lt;p>&lt;strong>namesilo购买教程：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://shannote.com/archives/how-to-register-namesilo-domain.html" target="_blank" rel="noopener"
>https://shannote.com/archives/how-to-register-namesilo-domain.html&lt;/a>&lt;/p>
&lt;p>&lt;strong>Namesilo配置教程：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.mailjob.net/posts/4108183257.html" target="_blank" rel="noopener"
>https://blog.mailjob.net/posts/4108183257.html&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://shannote.com/archives/how-to-register-namesilo-domain.html" target="_blank" rel="noopener"
>https://shannote.com/archives/how-to-register-namesilo-domain.html&lt;/a>&lt;/p>
&lt;p>&lt;strong>所有的操作是跟着这个教程走的:&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.zhudc.com/website/2413" target="_blank" rel="noopener"
>https://www.zhudc.com/website/2413&lt;/a>&lt;/p>
&lt;h1 id="填写注意">填写注意&lt;/h1>
&lt;h2 id="a-记录ipv4-地址">A 记录（IPv4 地址）&lt;/h2>
&lt;p>主机名（Host）： 通常是 @
或者你的域名（比如 example.com）。&lt;/p>
&lt;p>IP 地址： 这是你的服务器的公共 IPv4地址。&lt;/p>
&lt;p>&lt;strong>如何获取服务器的公共 IPv4 地址：&lt;/strong>&lt;/p>
&lt;p>如果使用云服务提供商（如AWS、DigitalOcean、Azure），可在控制台或面板中找到你的服务器实例，并找到其公共 IP 地址。&lt;/p>
&lt;p>如果有自己的物理服务器，你可以通过访问网站WhatIsMyIP 或使用命令行工具（例如，在终端中运行 curl ifconfig.me）获取公共 IP 地址。&lt;/p>
&lt;h2 id="cname-记录">CNAME 记录&lt;/h2>
&lt;p>填上面两个A就不用填这个，这个是填你的www 子域名，和上面那个二选一。&lt;/p>
&lt;p>主机名（Host）： 通常是 www。&lt;/p>
&lt;p>目标（Value）： 这是你的域名（比如example.com）。&lt;/p>
&lt;p>CNAME 记录是选填的，通常用于将 www子域名指向主域名，以确保两者都能正确访问博客。&lt;/p>
&lt;p>TTL（Time to Live）是DNS记录在缓存中保存的时间，通常以秒为单位。&lt;/p>
&lt;p>当你在NameSilo或其他域名注册商添加A记录或CNAME记录时，你可以选择设置TTL。TTL的设置影响了DNS变更生效的时间以及对DNS查询的缓存持续时间。&lt;/p>
&lt;p>一般来说，TTL一般填3600秒就好（1小时），因为较短的TTL可以使DNS更迅速地生效，但同时也增加了DNS服务器的负担。如果频繁地进行DNS更改，可以选择将TTL设置得更短，以便更快地应用变更。&lt;/p>
&lt;p>具体的TTL设置取决于你的需求和实际情况。如果不经常更改DNS记录，使用较长的TTL可能更有效，因为它会减轻DNS服务器的负担并提高性能。&lt;/p>
&lt;p>总之，网上的一些建议将TTL设置为3600秒是为了在进行DNS更改时能够更迅速地生效。可以根据自己的需求来选择TTL的值。&lt;/p>
&lt;h1 id="使用cloudflare解析dns">使用Cloudflare解析DNS&lt;/h1>
&lt;p>&lt;strong>利用Cloudflare修改DNS服务器：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://lucumt.info/post/hugo/migrate-github-blog-from-http-to-https/" target="_blank" rel="noopener"
>https://lucumt.info/post/hugo/migrate-github-blog-from-http-to-https/&lt;/a>&lt;/p>
&lt;p>&lt;strong>利用Cloudflare为基于GitHub Pages的Hugo博客添加HTTPS支持：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://zhaouncle.com/hugo_03/#%E4%BA%8C%E5%88%A9%E7%94%A8cloudflare%E4%B8%BA%E5%9F%BA%E4%BA%8Egithub-pages%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0https%E6%94%AF%E6%8C%81" target="_blank" rel="noopener"
>https://zhaouncle.com/hugo_03/#%E4%BA%8C%E5%88%A9%E7%94%A8cloudflare%E4%B8%BA%E5%9F%BA%E4%BA%8Egithub-pages%E7%9A%84hugo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0https%E6%94%AF%E6%8C%81&lt;/a>&lt;/p>
&lt;p>&lt;strong>hugo+github page搭建自定义域名的https博客：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://h11ba1.com/2021/06/05/hugo&amp;#43;github%20page%E6%90%AD%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E7%9A%84https%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener"
>https://h11ba1.com/2021/06/05/hugo+github%20page%E6%90%AD%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E7%9A%84https%E5%8D%9A%E5%AE%A2/&lt;/a>&lt;/p>
&lt;h1 id="dns解析之我的修正">dns解析之我的修正&lt;/h1>
&lt;p>因为网站的IP是会变化的，所以直接添加这四个解析到IP地址的A记录。&lt;/p>
&lt;p>185.199.108.153&lt;/p>
&lt;p>185.199.109.153&lt;/p>
&lt;p>185.199.110.153&lt;/p>
&lt;p>185.199.111.153&lt;/p>
&lt;h1 id="github-pages部署">GitHub pages部署&lt;/h1>
&lt;p>&lt;strong>如果你的 Hugo 博客托管在 GitHub Pages，那么你需要指向 GitHub 提供的域名。&lt;/strong>&lt;/p>
&lt;p>通常，GitHub Pages 的域名是 &lt;username>.github.io（其中 &lt;username> 是你的 GitHub 用户名）。&lt;/p>
&lt;p>如果你在仓库的设置中配置了自定义域名，那么使用自定义域名。&lt;/p>
&lt;p>步骤如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>打开你的 Hugo 项目的 GitHub 仓库。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>进入仓库的 &amp;ldquo;Settings&amp;rdquo;（设置）选项&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 &amp;ldquo;GitHub Pages&amp;rdquo; 部分查看你的 GitHub Pages 网站的域名。如果设置了自定义域名，那么使用这个自定义域名。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>例如，如果你的 GitHub Pages 网站是通过 &lt;a class="link" href="https://%3cusername%3e.github.io/" target="_blank" rel="noopener"
>https://&lt;username>.github.io/&lt;/a> 访问的，那么你的 CNAME 记录可能如下所示：&lt;/p>
&lt;ul>
&lt;li>主机名（Host）：www（或者其他子域名，根据你的需求）&lt;/li>
&lt;li>目标（Value）：&lt;username>.github.io&lt;/li>
&lt;/ul>
&lt;p>记住，在设置 CNAME 记录之后，DNS 记录需要一些时间来生效，通常在几小时内，因此你可能需要等待一段时间，然后在浏览器中输入子域名来测试。&lt;/p>
&lt;p>&lt;strong>如果你的 Hugo 博客托管在 GitHub Pages，并且你想使用自定义域名，将你的github.io的子域名替换为你已经买好的域名：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>打开你的 Hugo 项目的 GitHub 仓库。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>进入仓库的 &amp;ldquo;Settings&amp;rdquo;（设置）选项。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自定义域名设置：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>在 &amp;ldquo;GitHub Pages&amp;rdquo; 部分：&lt;/p>
&lt;p>如果你的博客已启用 GitHub Pages，确保选择了 main 分支（或你的源分支）作为 source。&lt;/p>
&lt;p>在 Custom domain 字段中输入你的域名，例如xxxx.blog
这将告诉 GitHub Pages 为你的仓库生成网站，并在你的自定义域名上提供该网站。&lt;/p>
&lt;ol start="4">
&lt;li>DNS 配置：&lt;/li>
&lt;/ol>
&lt;p>在 Namesilo 或其他域名注册商处，确保你的域名的 DNS 设置包括正确的 A 记录，将子域名（例如 &lt;a class="link" href="http://www.springcecilia.xn--blog" target="_blank" rel="noopener"
>www.xxxxxx.blog）&lt;/a>-w52hi6jfb42sd3eluixp6bw6kux6cda/)&lt;/p>
&lt;p>指向你的服务器的公共IPv4 地址&lt;/p>
&lt;ol start="5">
&lt;li>等待 DNS&lt;/li>
&lt;/ol>
&lt;p>记录生效，可能需要一些时间（通常在几小时内），以确保域名正确地映射到你的 GitHub Pages。&lt;/p>
&lt;ol start="6">
&lt;li>测试和验证：&lt;/li>
&lt;/ol>
&lt;p>在浏览器中输入你的域名和子域名，确保Hugo博客能够正确加载。&lt;/p>
&lt;p>如果一切设置正确，你的博客应该能够通过自定义域名访问。&lt;/p>
&lt;h2 id="其他参考教程">其他参考教程&lt;/h2>
&lt;p>&lt;strong>&lt;a class="link" href="https://blog.cysi.me/2022/05/guide-for-building-a-wordpress-site.html" target="_blank" rel="noopener"
>冰布子的简易 Wordpress 建站指南&lt;/a>：（虽然是wordpress但是域名这块写得很详细）&lt;/strong>  &lt;/p>
&lt;p>&lt;a class="link" href="https://blog.cysi.me/2022/05/guide-for-building-a-wordpress-site.html#%E9%80%89%E6%8B%A9%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E5%95%86" target="_blank" rel="noopener"
>https://blog.cysi.me/2022/05/guide-for-building-a-wordpress-site.html#%E9%80%89%E6%8B%A9%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E5%95%86&lt;/a>&lt;/p>
&lt;p>&lt;strong>配置GitHub Page域名：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/582629584" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/582629584&lt;/a>&lt;/p>
&lt;p>&lt;strong>使用自定义域名来访问GitHub上部署的hugo博客——GitHub Pages：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://cloud.tencent.com/developer/article/1834163" target="_blank" rel="noopener"
>https://cloud.tencent.com/developer/article/1834163&lt;/a>&lt;/p>
&lt;p>&lt;strong>GitHub博客绑定自定义域名：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://ftzzloo.com/github-pages-and-domain-name-setting/#%E6%B7%BB%E5%8A%A0A%E8%AE%B0%E5%BD%95" target="_blank" rel="noopener"
>https://ftzzloo.com/github-pages-and-domain-name-setting/#%E6%B7%BB%E5%8A%A0A%E8%AE%B0%E5%BD%95&lt;/a>&lt;/p>
&lt;p>&lt;strong>问题排除参考：&lt;/strong>  &lt;/p>
&lt;p>&lt;strong>How to Fix Cloudflare Error 522：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.hostinger.com/tutorials/error-522" target="_blank" rel="noopener"
>https://www.hostinger.com/tutorials/error-522&lt;/a>&lt;/p>
&lt;p>&lt;strong>Troubleshooting custom domains and GitHub Pages：&lt;/strong>&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/troubleshooting-custom-domains-and-github-pages" target="_blank" rel="noopener"
>https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/troubleshooting-custom-domains-and-github-pages&lt;/a>&lt;/p></description></item><item><title>【建站4】推送到GitHub Actions</title><link>https://springcecilia.blog/%E5%BB%BA%E7%AB%994%E6%8E%A8%E9%80%81%E5%88%B0GitHub-Actions/</link><pubDate>Fri, 15 Dec 2023 17:34:26 +0800</pubDate><guid>https://springcecilia.blog/%E5%BB%BA%E7%AB%994%E6%8E%A8%E9%80%81%E5%88%B0GitHub-Actions/</guid><description>&lt;h1 id="基本介绍">基本介绍&lt;/h1>
&lt;p>GitHub Actions是GitHub提供的一项自动化工作流服务。它允许你在代码仓库中配置和执行自动化任务，例如构建、测试、部署等。&lt;/p>
&lt;p>使用 Git 推送到 GitHub 仓库通常需要手动运行 Hugo 构建命令，将生成的静态文件添加到 Git 仓库，并推送到 GitHub，&lt;/p>
&lt;p>相比之下，GitHub Actions 提供了自动化的方式来构建和部署 Hugo 网站。在每次推送代码到 GitHub 仓库时，GitHub Actions 可以自动触发构建过程，并将生成的静态文件部署到指定的目标，如 GitHub Pages。&lt;/p>
&lt;h1 id="主要步骤">主要步骤&lt;/h1>
&lt;h2 id="创建workflow文件">创建workflow文件&lt;/h2>
&lt;p>在 Hugo 项目的根目录下创建一个名为 .github/workflows/main.yml 的文件&lt;/p>
&lt;p>打开Git，使用 cd 命令导航到你的 Hugo 项目的根目录。例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">cd&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">to&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">your&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">hugo&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">project&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>替换 path/to/your/hugo/project 为自己的 Hugo 博客文件路径。&lt;/p>
&lt;p>使用以下命令创建 .github/workflows 目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">mkdir&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">p&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nx">github&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">workflows&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这会创建一个名为 .github/workflows 的目录。-p 选项用于确保如果上级目录不存在也能一并创建。&lt;/p>
&lt;p>进入 .github/workflows 目录，用 VSCode创建 main.yml 文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">code&lt;/span> &lt;span class="nx">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">yml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开 main.yml 文件，将 GitHub Actions 的配置内容复制到该文件中：  &lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Deploy&lt;/span> &lt;span class="nx">Hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">on&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">push&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">branches&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="nx">main&lt;/span>  &lt;span class="err">#&lt;/span> &lt;span class="nx">可以根据实际情况修改分支&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">jobs&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">build&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">runs&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ubuntu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">latest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">steps&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Checkout&lt;/span> &lt;span class="nx">repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">uses&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">actions&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">checkout&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">v4&lt;/span>&lt;span class="mf">.1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Setup&lt;/span> &lt;span class="nx">Hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">uses&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">peaceiris&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">actions&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">hugo&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">v2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">with&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hugo&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">version&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;latest&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Build&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">run&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">hugo&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="nx">minify&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Deploy&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">GitHub&lt;/span> &lt;span class="nx">Pages&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">uses&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">peaceiris&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">actions&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">gh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">pages&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">v3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">with&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">deploy_key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">$&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="nx">secrets&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ACTIONS_DEPLOY_KEY&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">publish_dir&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="kr">public&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此配置文件的主要作用是：&lt;/p>
&lt;p>当代码推送到 main 分支时触发工作流程。&lt;/p>
&lt;p>使用 actions/checkout 动作检出仓库。&lt;/p>
&lt;p>使用 peaceiris/actions-hugo 动作设置 Hugo 环境并构建网站。&lt;/p>
&lt;p>使用 peaceiris/actions-gh-pages 动作将生成的静态文件推送到 GitHub Pages。&lt;/p>
&lt;p>&lt;strong>注：要更新uses: actions/checkout@ 后面的版本号&lt;/strong>&lt;/p>
&lt;p>在 GitHub 上 actions/checkout 仓库的 releases 页面查看最新版本，步骤如下：&lt;/p>
&lt;p>打开 actions/checkout 仓库的 releases 页面：&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/actions/checkout/releases" target="_blank" rel="noopener"
>https://github.com/actions/checkout/releases&lt;/a>。&lt;/p>
&lt;p>在页面上可看到列出的所有发布版本的信息。GitHub Actions 通常会以 v2.x.x 的形式进行版本命名。&lt;/p>
&lt;p>最新版本的标签在列表的最上面。&lt;/p>
&lt;p>在 GitHub Actions 工作流程文件中，更新 uses: actions/checkout@v2 部分的版本号为最新版本。例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Checkout&lt;/span> &lt;span class="nx">repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">uses&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">actions&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">checkout&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">v2&lt;/span>&lt;span class="mf">.5.1&lt;/span>  &lt;span class="err">#&lt;/span> &lt;span class="nx">替换为最新版本&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过使用最新版本，你可以确保 GitHub Actions 在最新的特性和改进的环境中运行。&lt;/p>
&lt;h2 id="生成-github-personal-access-token访问令牌">生成 GitHub Personal Access Token（访问令牌）    &lt;/h2>
&lt;p>为使 GitHub Actions 推送到 GitHub Pages，你需要一个具有推送权限的访问令牌，并将其添加到仓库的 Secrets 中。&lt;/p>
&lt;p>&lt;strong>步骤如下：&lt;/strong>&lt;/p>
&lt;p>1） 生成个人访问令牌     &lt;/p>
&lt;p>登录到你的 GitHub 帐户；&lt;/p>
&lt;p>在右上角的头像旁边，点击你的头像，然后选择 &amp;ldquo;Settings&amp;rdquo;；&lt;/p>
&lt;p>在左侧导航栏中，选择 &amp;ldquo;Developer settings&amp;rdquo;；&lt;/p>
&lt;p>在 &amp;ldquo;Access tokens&amp;rdquo; 部分，点击 &amp;ldquo;Generate token&amp;rdquo;；&lt;/p>
&lt;p>在 &amp;ldquo;Note&amp;rdquo; 字段中，输入一个描述性的名称，以便识别这个访问令牌是用于什么目的；&lt;/p>
&lt;p>在 &amp;ldquo;Select scopes&amp;rdquo; 或 &amp;ldquo;Select scopes to grant access to your repositories&amp;rdquo; 部分，选择适当的权限范围。对于部署 Hugo 网站，你可能需要选择 repo 和 workflow；&lt;/p>
&lt;p>滚动到页面底部，点击 &amp;ldquo;Generate token&amp;rdquo;。&lt;/p>
&lt;p>2）复制生成的个人访问令牌&lt;/p>
&lt;p>&lt;strong>重要： 请在生成后立即复制令牌，保存下来，因为它将不再可见，下次忘了得重新生成。&lt;/strong>&lt;/p>
&lt;p>3）将令牌添加到仓库的 Secrets 中&lt;/p>
&lt;p>转到你的 Hugo 项目的 GitHub 仓库。&lt;/p>
&lt;p>在仓库页面的右上角，点击 &amp;ldquo;Settings&amp;rdquo;。&lt;/p>
&lt;p>在左侧导航栏中，选择 &amp;ldquo;Secrets and variables&amp;rdquo;。&lt;/p>
&lt;p>点击 &amp;ldquo;Actions&amp;rdquo; New repository secret&amp;quot;。&lt;/p>
&lt;p>在 &amp;ldquo;Name&amp;rdquo; 字段中，输入 ACTIONS_DEPLOY_KEY，这是在 GitHub Actions 配置中引用的 Secret 名称。&lt;/p>
&lt;p>在 &amp;ldquo;Value&amp;rdquo; 字段中，粘贴刚刚生成的个人访问令牌。&lt;/p>
&lt;p>点击 &amp;ldquo;Add secret&amp;rdquo;。就可将个人访问令牌添加到仓库的 Secrets 中，在 GitHub Actions 的配置中使用它进行部署。&lt;/p>
&lt;h2 id="将修改的文件添加到-git">将修改的文件添加到 Git&lt;/h2>
&lt;p>在你的 Hugo 项目路径，使用Git复制以下命令将修改的文件添加到 Git 缓存区：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">git&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用以下命令提交修改，其中 &amp;ldquo;Your commit message&amp;rdquo; 替换为你的提交信息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">git&lt;/span> &lt;span class="nx">commit&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="s2">&amp;#34;Your commit message&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将提交的修改推送到 GitHub 仓库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">git&lt;/span> &lt;span class="nx">push&lt;/span> &lt;span class="nx">origin&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注：&lt;/p>
&lt;p>如果默认分支不是 main，请将 main 替换为你的默认分支名称。&lt;/p>
&lt;p>确保 main.yml 文件的缩进是正确的 YAML 格式。&lt;/p>
&lt;p>确保 Hugo 项目的根目录中有 public 文件夹，并且该文件夹在 .gitignore 文件中没有被忽略。&lt;/p>
&lt;p>如果 Hugo 网站使用子模块，确保在 actions/checkout 步骤中包括 submodules: &amp;lsquo;recursive&amp;rsquo; 选项，以确保子模块也被正确检出。&lt;/p>
&lt;p>以上步骤适用于 GitHub Actions 的配置，确保你的仓库的 GitHub Pages 设置是正确的（例如，设置为使用 gh-pages 分支或 docs 文件夹）。部署完成后，你的 Hugo 网站应该可以通过 GitHub Pages 访问。&lt;/p>
&lt;h2 id="查看-github-actions-运行">查看 GitHub Actions 运行&lt;/h2>
&lt;p>访问 GitHub 仓库页面，进入 &amp;ldquo;Actions&amp;rdquo; 标签页，能够看到 GitHub Actions 的运行。如果配置正确，工作流程应该会触发并开始运行。&lt;/p>
&lt;p>在 GitHub Actions 页面，可查看运行的工作流程的状态、日志和任何可能的错误信息。一旦工作流程成功运行，你的 Hugo 网站应该会被构建并部署到指定的目标（例如 GitHub Pages）。可通过查看工作流程的日志或访问你的 Hugo 网站的部署目标来确认部署的状态。&lt;/p></description></item><item><title>【建站3】使用SSH密钥法将Hugo上传至Github</title><link>https://springcecilia.blog/%E5%BB%BA%E7%AB%993%E4%BD%BF%E7%94%A8SSH%E5%AF%86%E9%92%A5%E6%B3%95%E5%B0%86Hugo%E4%B8%8A%E4%BC%A0%E8%87%B3Github/</link><pubDate>Thu, 14 Dec 2023 17:34:26 +0800</pubDate><guid>https://springcecilia.blog/%E5%BB%BA%E7%AB%993%E4%BD%BF%E7%94%A8SSH%E5%AF%86%E9%92%A5%E6%B3%95%E5%B0%86Hugo%E4%B8%8A%E4%BC%A0%E8%87%B3Github/</guid><description>&lt;h1 id="前期准备">前期准备&lt;/h1>
&lt;h2 id="注册github账号">注册github账号&lt;/h2>
&lt;p>GitHub是一个基于Git版本控制系统的代码托管平台，提供了一系列协作工具，例如问题追踪、代码审查、分支管理等。&lt;/p>
&lt;p>注册步骤（要魔法工具，有github账号的可跳过）：    &lt;/p>
&lt;p>1）访问&lt;a class="link" href="https://github.com/" target="_blank" rel="noopener"
>GitHub官网&lt;/a>。  &lt;/p>
&lt;p>2）在GitHub首页点击&amp;quot;Sign up&amp;quot;按钮。&lt;/p>
&lt;p>3）填写注册信息，包括用户名、电子邮件地址（尽量用外国邮箱）和密码。用户名要好好取，因为它会用作你在GitHub上的标识。&lt;/p>
&lt;p>4）完成信息填写后，GitHub可能会通过电子邮件发送的验证码进行身份验证。&lt;/p>
&lt;p>5）选择免费计划然后点击&amp;quot;Continue&amp;quot;。&lt;/p>
&lt;p>6）完成上述步骤后，可以设置头像、添加个人简介等信息。完成设置后，点击&amp;quot;Submit&amp;quot;。&lt;/p>
&lt;p>7）验证邮箱： 为了确保你的电子邮件地址的有效性，GitHub可能会要求你验证你的电子邮件地址，按照指示操作就行了。&lt;/p>
&lt;p>注册好GitHub账户后就可以使用你的用户名和密码登录GitHub，并开始创建、托管和协作开发项目。&lt;/p>
&lt;h1 id="将hugo部署到github前期准备">将Hugo部署到GitHub前期准备&lt;/h1>
&lt;p>*注：在生成静态页面之前要把config.toml文件里的baseURL修改为自己博客的网址，譬如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">baseURL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;[https://xxxxx.github.io/](https://xxxxx.github.io/)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hugo&lt;/span> &lt;span class="err">##&lt;/span>&lt;span class="nx">生成静态页面文件&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="在-github-上创建新仓库">在 GitHub 上创建新仓库&lt;/h2>
&lt;p>登录到 GitHub&lt;/p>
&lt;p>在右上角的头像旁边，点击加号（+），然后选择 &amp;ldquo;New repository&amp;rdquo;。&lt;/p>
&lt;p>命名你的仓库，**注意：**仓库名要以 &lt;a class="link" href="http://xn--github-on9im33ani7aou3bged.github.io/" target="_blank" rel="noopener"
>你的github用户名.github.io&lt;/a> 这种格式&lt;/p>
&lt;p>例如，你的github用户名是xxxxx，仓库名就是：&lt;a class="link" href="http://xxxxx.github.io/" target="_blank" rel="noopener"
>xxxxx.github.io&lt;/a>，确保xxxxx和你的本地文件config.toml里的baseURL博客网址一致&lt;/p>
&lt;p>不要勾选 &amp;ldquo;Initialize this repository with a README&amp;rdquo; 选项（因为你的 Hugo 网站已经有了自己的 README）。&lt;/p>
&lt;p>点击 &amp;ldquo;Create repository&amp;rdquo;。&lt;/p>
&lt;p>接下来将本地 Hugo 仓库关联到 GitHub 仓库，有两种方法。&lt;/p>
&lt;p>方法1：https法推送到github pages，适合没有墙的环境，pass&lt;/p>
&lt;p>方法2：SSH密钥法连接，比较安全，减少了每次推送、拉取或克隆仓库时的繁琐过程，推荐&lt;/p>
&lt;h2 id="确认github仓库的默认分支">确认Github仓库的默认分支&lt;/h2>
&lt;p>GitHub 近期已经在新仓库中将默认分支的名称从 master 更改为 main，如果你的github默认分支是 master，请将master替换为 main。&lt;/p>
&lt;p>替换步骤：&lt;/p>
&lt;p>打开你的 GitHub 仓库。&lt;/p>
&lt;p>点击右上角的 &amp;ldquo;Settings&amp;rdquo;（设置）。&lt;/p>
&lt;p>进入新的界面后直接在Repository name下找到 &amp;ldquo;Default branch&amp;rdquo;（默认分支）&lt;/p>
&lt;p>下拉菜单中选择你想要设置为默认的分支，例如 main&lt;/p>
&lt;p>点击 &amp;ldquo;Update&amp;rdquo;（更新）按钮保存更改。&lt;/p>
&lt;p>设置 GitHub Pages：&lt;/p>
&lt;p>• 在 GitHub 仓库页面的顶部，点击 &amp;ldquo;Settings&amp;rdquo;。&lt;/p>
&lt;p>• 在左侧导航栏中选择 &amp;ldquo;Pages&amp;rdquo;。&lt;/p>
&lt;p>• 在 &amp;ldquo;Source&amp;rdquo; 下拉菜单中选择 main 分支（或者是你的默认分支）。&lt;/p>
&lt;p>• 点击 &amp;ldquo;Save&amp;rdquo;。&lt;/p>
&lt;h1 id="3使用ssh密钥与github建立连接">3.使用SSH密钥与GitHub建立连接&lt;/h1>
&lt;h2 id="生成-ssh-密钥">生成 SSH 密钥&lt;/h2>
&lt;p>打开Git。
运行以下命令生成 SSH 密钥。如果你已经有一个 SSH 密钥，请跳过此步骤。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">ssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">keygen&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">t&lt;/span> &lt;span class="nx">rsa&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="mi">4096&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">C&lt;/span> &lt;span class="s2">&amp;#34;[your_email@example.com](mailto:your_email@example.com)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>替换 &amp;ldquo;&lt;a class="link" href="mailto:your_email@example.com" >your_email@example.com&lt;/a>&amp;rdquo; 为你在 GitHub 注册时使用的电子邮件地址。&lt;/p>
&lt;p>按照提示，选择默认的文件路径和设置密码（可选）。&lt;/p>
&lt;h2 id="添加-ssh-密钥到-ssh-代理">添加 SSH 密钥到 SSH 代理&lt;/h2>
&lt;p>运行以下命令启动 SSH 代理：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">eval&lt;/span> &lt;span class="s2">&amp;#34;$(ssh-agent -s)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将 SSH 私钥添加到 SSH 代理：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">ssh&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">add&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="err">/.ssh/id_rsa&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你使用了不同的密钥文件名，请替换 id_rsa 为你实际的私钥文件名。&lt;/p>
&lt;h2 id="添加-ssh-公钥到-github">添加 SSH 公钥到 GitHub&lt;/h2>
&lt;p>使用以下命令查看并复制 SSH 公钥：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">cat&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="err">/.ssh/id_rsa.pub&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该命令将在终端中显示 SSH 公钥内容。&lt;/p>
&lt;h2 id="登录到-github">登录到 GitHub&lt;/h2>
&lt;p>点击右上角的头像，选择 &amp;ldquo;Settings&amp;rdquo;。&lt;/p>
&lt;p>在左侧导航栏中，选择 &amp;ldquo;SSH and GPG keys&amp;rdquo;。&lt;/p>
&lt;p>点击 &amp;ldquo;New SSH key&amp;rdquo;。&lt;/p>
&lt;p>在 &amp;ldquo;Title&amp;rdquo; 字段中，为 SSH 密钥提供一个描述性的名称。&lt;/p>
&lt;p>在 &amp;ldquo;Key&amp;rdquo; 字段中，粘贴你复制的 SSH 公钥。&lt;/p>
&lt;p>点击 &amp;ldquo;Add SSH key&amp;rdquo;。&lt;/p>
&lt;h2 id="测试-ssh-连接">测试 SSH 连接&lt;/h2>
&lt;p>运行以下命令测试 SSH 连接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">ssh&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">T&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">git&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">github&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">com&lt;/span>&lt;span class="p">](&lt;/span>&lt;span class="nx">mailto&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">git&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">github&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">com&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果设置正确，会看到一条消息显示已成功地进行了身份验证。&lt;/p>
&lt;p>如果出现警告或错误，请检查你的设置。&lt;/p>
&lt;p>一旦成功设置了 SSH 密钥，就可以用它与 GitHub 进行安全的连接。&lt;/p>
&lt;h2 id="将仓库-url-切换为-ssh">将仓库 URL 切换为 SSH&lt;/h2>
&lt;p>在你的 Hugo 项目目录中，使用以下命令将仓库的 URL 从 HTTPS 切换到 SSH。&lt;/p>
&lt;h2 id="找到仓库的-ssh-地址">找到仓库的 SSH 地址&lt;/h2>
&lt;p>进入你的 GitHub 仓库页面&lt;/p>
&lt;p>点击 &amp;ldquo;Code&amp;rdquo; 按钮，然后选择 &amp;ldquo;SSH&amp;rdquo; 选项，会显示仓库的 SSH 地址，类似于 &lt;a class="link" href="mailto:git@github.com" >git@github.com&lt;/a>:your_username/your_repository.git&lt;/p>
&lt;p>复制到git面板，把下列代码后半段的ssh地址替换成你的↓&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">git&lt;/span> &lt;span class="nx">remote&lt;/span> &lt;span class="nx">set&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">url&lt;/span> &lt;span class="nx">origin&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">git&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">github&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">com&lt;/span>&lt;span class="p">](&lt;/span>&lt;span class="nx">mailto&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">git&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">github&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">com&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">xxxxxx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">xxx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">git&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="推送到-github-仓库">推送到 GitHub 仓库&lt;/h2>
&lt;p>在git里使用以下代码将本地分支推送到 GitHub 仓库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">git&lt;/span> &lt;span class="nx">push&lt;/span> &lt;span class="nx">origin&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该命令会将本地的 main 分支的提交推送到 GitHub 上的 origin/main 分支。&lt;/p>
&lt;h2 id="验证推送">验证推送&lt;/h2>
&lt;p>在推送后，你可以在 GitHub 仓库页面上查看是否有新的提交。若一切正常，你的提交应该已经被推送到 GitHub 仓库。&lt;/p>
&lt;h1 id="注可能遇到的问题">&lt;strong>注：可能遇到的问题&lt;/strong>&lt;/h1>
&lt;p>&lt;strong>问题1：&lt;/strong>
遇到Enter file in which to save the key
(/c/Users/xxxx/.ssh/id_rsa): /c/Users/.ssh/id_rsa already exists. Overwrite
(y/n)? y Enter passphrase (empty for no passphrase): 这一步该怎么办？&lt;/p>
&lt;p>答：这个步骤是在生成 SSH 密钥时的一些设置选项，如  &lt;/p>
&lt;p>&lt;strong>&amp;ldquo;Enter file in which to save the key&amp;rdquo;：&lt;/strong>&lt;/p>
&lt;p>意思是系统正在询问你要保存 SSH 密钥的文件路径和名称。默认情况下，它会提供一个默认的路径，例如 /c/Users/xxxx/.ssh/id_rsa。这是 SSH 密钥的默认路径和名称。&lt;/p>
&lt;p>如果想将密钥保存在默认位置并使用默认名称，只需按 Enter 键。否则，你可以输入一个新的文件路径和名称，例如 /c/Users/xxxx/.ssh/custom_key。&lt;/p>
&lt;p>&lt;strong>&amp;ldquo;already exists. Overwrite (y/n)?&amp;quot;：&lt;/strong>&lt;/p>
&lt;p>如果你选择的文件路径和名称已经存在一个文件，系统会询问你是否要覆盖现有文件。在你的情况下，系统发现 /c/Users/xxxx/.ssh/id_rsa 已经存在。&lt;/p>
&lt;p>如果想覆盖现有文件并使用相同的路径和名称，你可以输入 y 并按 Enter 键。否则，输入 n 并按 Enter 键，然后选择另一个路径和名称。&lt;/p>
&lt;p>&lt;strong>&amp;ldquo;Enter passphrase (empty for no passphrase)&amp;quot;：&lt;/strong>&lt;/p>
&lt;p>在这一步，系统询问你是否要为 SSH 密钥设置密码（也称为“passphrase”）。密码对于提高安全性很有用，但是你可以选择留空，按 Enter 键，以创建没有密码的密钥。&lt;/p>
&lt;p>如果你选择设置密码，确保记住密码，因为在将来你使用密钥时需要输入密码。&lt;/p>
&lt;p>&lt;strong>总结：&lt;/strong>&lt;/p>
&lt;p>如果希望使用默认设置，只需按 Enter 键即可。&lt;/p>
&lt;p>如果希望更改保存密钥的路径和名称，输入新的路径和名称。&lt;/p>
&lt;p>如果密钥文件已经存在，自己决定是否要覆盖。&lt;/p>
&lt;p>选择是否设置密码，如不想设置密码，直接按 Enter 键。&lt;/p>
&lt;p>&lt;strong>问题2：&lt;/strong>
输入仓库的SSH地址时，显示：&lt;/p>
&lt;p>The authenticity of host &amp;lsquo;github.com (20.205.243.166)&amp;rsquo; can&amp;rsquo;t be established.
ED25519 key fingerprint is XXXXXXXXXXXXXXXXXXXXXXXX
This key is not known by any other names. Are you sure you want to continue
connecting (yes/no/[fingerprint])? 该怎么办？&lt;/p>
&lt;p>答：这是 SSH 连接的一部分，系统会询问你是否信任 GitHub 的主机密钥。这通常只会发生一次，当你第一次连接 GitHub 时。&lt;/p>
&lt;p>GitHub 提供了一个密钥用于安全连接。&lt;/p>
&lt;p>在提示中，有一行显示了 GitHub 的公钥指纹，需要确保指纹与 GitHub 上提供的一致。&lt;/p>
&lt;p>如果指纹是正确的，输入 yes 表示你确认连接。&lt;/p>
&lt;p>如果你有疑虑或担心，可以输入 no 中止连接。&lt;/p>
&lt;p>如果输入 yes，计算机将记住 GitHub 的主机密钥，以后连接时不再提示。&lt;/p></description></item><item><title>【建站2】在Hugo中发布内容</title><link>https://springcecilia.blog/%E5%BB%BA%E7%AB%992%E5%9C%A8Hugo%E4%B8%AD%E5%8F%91%E5%B8%83%E5%86%85%E5%AE%B9/</link><pubDate>Wed, 13 Dec 2023 17:34:26 +0800</pubDate><guid>https://springcecilia.blog/%E5%BB%BA%E7%AB%992%E5%9C%A8Hugo%E4%B8%AD%E5%8F%91%E5%B8%83%E5%86%85%E5%AE%B9/</guid><description>&lt;p>需要：前面建站1里的git工具、VScode工具，少量markdown语法知识  &lt;/p>
&lt;h1 id="1发布纯文字的文章">1.发布纯文字的文章&lt;/h1>
&lt;h2 id="创建新文章">创建新文章&lt;/h2>
&lt;p>导航到你的 Hugo 根目录，选中博客文件夹右键选中Open git bash here，运行以下代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hugo&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">posts&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">my&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">first&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">post&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">md&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这将在 content/posts/ 目录下创建一个名为 &lt;a class="link" href="http://my-first-post.md/" target="_blank" rel="noopener"
>my-first-post.md&lt;/a> 的 Markdown 文件。&lt;/p>
&lt;h2 id="编辑文章">编辑文章&lt;/h2>
&lt;p>使用VSCode打开 content/posts/my-first-post.md 文件，然后编辑内容保存。&lt;/p>
&lt;p>Markdown 文件的开头通常包括一些元数据，比如标题、日期、标签等。&lt;/p>
&lt;p>&lt;strong>例如：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;我的第一篇博客&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">date&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2023&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="nx">T09&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">draft&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">tags&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Hugo&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;博客&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">categories&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;技术&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">---&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">这是我的第一篇博客文章&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="nx">使用&lt;/span> &lt;span class="nx">Hugo&lt;/span> &lt;span class="nx">搭建的博客系统&lt;/span>&lt;span class="err">。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p> &lt;/p>
&lt;h2 id="运行-hugo-本地服务器进行预览">运行 Hugo 本地服务器进行预览&lt;/h2>
&lt;p>在git中输入以下代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hugo&lt;/span> &lt;span class="nx">server&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">D&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后，打开浏览器，访问 &lt;a class="link" href="http://localhost:1313/" target="_blank" rel="noopener"
>http://localhost:1313/&lt;/a>&lt;/p>
&lt;p>你应该能够在本地预览你的博客，包括新创建的文章。&lt;/p>
&lt;p>如果预览中一切正常，你可以停止 Hugo 服务器，并输入以下代码来生成静态文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hugo&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这会在博客的根目录生成一个 public/ 目录，里面包含了你想要呈现的整个博客的静态文件。&lt;/p>
&lt;p>你可以将这些文件托管到GitHub（见下篇教程），使其在互联网上可访问。    &lt;/p>
&lt;h1 id="修改已经发布的-hugo-文章">修改已经发布的 Hugo 文章&lt;/h1>
&lt;h2 id="找到文章">找到文章&lt;/h2>
&lt;p>在 Hugo 项目的 content/posts/ 目录下找到你想修改的文章，以 .md 为扩展名格式。&lt;/p>
&lt;h2 id="编辑文章内容">编辑文章内容&lt;/h2>
&lt;p>使用VScode打开文章，参考&lt;a class="link" href="https://markdown.com.cn/basic-syntax/" target="_blank" rel="noopener"
>Markdown 官方教程&lt;/a>，对内容进行修改。&lt;/p>
&lt;h2 id="添加并提交修改的文件在git里输入以下代码">添加并提交修改的文件，在git里输入以下代码    &lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">git&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">git&lt;/span> &lt;span class="nx">commit&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="s2">&amp;#34;这里随便填，可以注明你的修改记录&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后，再将 public/ 目录的内容部署到你的服务器上。&lt;/p>
&lt;p>注意：输入””时要保证是英文输入法状态     &lt;/p>
&lt;h2 id="运行以下代码在本地进行预览">运行以下代码，在本地进行预览&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hugo&lt;/span> &lt;span class="nx">server&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">D&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开浏览器，访问 &lt;a class="link" href="http://localhost:1313/" target="_blank" rel="noopener"
>http://localhost:1313/&lt;/a>&lt;/p>
&lt;p>查看你的修改是否生效。在预览中确认无误后，你可以继续下一步部署。&lt;/p>
&lt;h1 id="3发布带图文章">3.发布带图文章&lt;/h1>
&lt;p>如要在 Hugo 中发布有图片的文章，需要使用正确的Markdown语法来插入图片。&lt;/p>
&lt;h2 id="准备图片">准备图片&lt;/h2>
&lt;p>确保你的图片已经放置在博客文件里的 static 文件夹下。
例如，如果你有一张图片 my-image.jpg，可以将其放在 static/images/ 目录下。&lt;/p>
&lt;h2 id="用-markdown-插入图片">用 Markdown 插入图片&lt;/h2>
&lt;p>在文章中，使用以下语法插入图片：&lt;/p>
&lt;p>（注：输入下列代码两边要加英文输入法状态下的&amp;lt;&amp;gt;）
imgsrc=&amp;quot;/img/hugo version.png&amp;quot;alt=&amp;ldquo;Alt Text&amp;quot;width=&amp;ldquo;50&amp;quot;height=&amp;ldquo;auto&amp;rdquo;&lt;/p>
&lt;h2 id="运行-hugo-本地服务器进行预览-1">运行 Hugo 本地服务器进行预览&lt;/h2>
&lt;p>在Git中运行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hugo&lt;/span> &lt;span class="nx">server&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">D&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开浏览器，访问 &lt;a class="link" href="http://localhost:1313/" target="_blank" rel="noopener"
>http://localhost:1313/&lt;/a>&lt;/p>
&lt;p>显示如下：&lt;/p>
&lt;img src="https://springcecilia.blog/images/1.png" alt="Alt Text" style="width: 50px; height: auto;">
&lt;h2 id="调整图片大小">调整图片大小&lt;/h2>
&lt;p>如果需要设置图片的大小，可以修改代码里 width 和 height 的数值。&lt;/p>
&lt;p>显示如下：&lt;/p>
&lt;img src="https://springcecilia.blog/images/1.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;p>查看你的修改是否生效。在预览中确认无误后，你可以继续下一步部署。&lt;/p></description></item><item><title>【建站1】Hugo配置主题及生成</title><link>https://springcecilia.blog/%E5%BB%BA%E7%AB%991Hugo%E9%85%8D%E7%BD%AE%E4%B8%BB%E9%A2%98%E5%8F%8A%E7%94%9F%E6%88%90/</link><pubDate>Tue, 12 Dec 2023 17:34:26 +0800</pubDate><guid>https://springcecilia.blog/%E5%BB%BA%E7%AB%991Hugo%E9%85%8D%E7%BD%AE%E4%B8%BB%E9%A2%98%E5%8F%8A%E7%94%9F%E6%88%90/</guid><description>&lt;p>hugo和其他各类博客类型了解：
&lt;a class="link" href="https://cloud.tencent.com/developer/article/1917500" target="_blank" rel="noopener"
>https://cloud.tencent.com/developer/article/1917500&lt;/a>&lt;/p>
&lt;p>这里我选的是用Hugo搭建，比较简洁，wordpress对我来说太臃肿了访问也慢。Hugo内容可以在本地，备份比较方便和稳定。&lt;p>
&lt;p>&lt;strong>注：&lt;/strong>&lt;/p>
&lt;p>博主非计算机专业，对代码一窍不通；&lt;/p>
&lt;p>此搭建记录使用的电脑系统为windows，不适用Linux、mac人群；&lt;/p>
&lt;p>建博用的工具为Git、Hugo、VScode（写代码工具）；部署用的是GitHub   &lt;/p>
&lt;p>搭建过程需要：稳定的魔法工具、能访问Github、少量英语阅读能力以及基础的信息检索能力、电脑操作能力、足够的本地磁盘容量。    &lt;/p>
&lt;hr>
&lt;h1 id="前期准备">前期准备&lt;/h1>
&lt;h2 id="安装-git">安装 Git&lt;/h2>
&lt;p>&lt;strong>何为git？&lt;/strong>&lt;/p>
&lt;p>Git就是一个搭建博客时用来推送源代码、跟踪文件的变化、记录每次修改、保存历史版本的工具。你后期更新博客的样式、文章等等都是修改后通过Git来推送。&lt;/p>
&lt;p>&lt;strong>Git安装步骤：&lt;/strong>&lt;/p>
&lt;p>1）去 &lt;a class="link" href="https://git-scm.com/download/win" target="_blank" rel="noopener"
>Git 官网&lt;/a> 下载 Git 的最新版本，根据你的电脑系统类型选择版本。&lt;/p>
&lt;p>2）下载完后在本地右键安装程序，按照默认的设置一路安装就好，注意在 &amp;ldquo;Select Components&amp;rdquo; 阶段，确保要选中 &amp;ldquo;Git Bash Here&amp;rdquo; 选项。&lt;/p>
&lt;h2 id="安装vscode">安装VScode  &lt;/h2>
&lt;p>&lt;strong>何为VScode？&lt;/strong>&lt;/p>
&lt;p>Visual Studio Code（VSCode）为Microsoft开发的免费、开源的源代码编辑器。就是用来帮你修改hugo的主题文件代码的一个编辑工具，比如你文本一般是用word编辑，代码就是用VScode来编辑。&lt;/p>
&lt;p>&lt;strong>VScode安装步骤：&lt;/strong>&lt;/p>
&lt;p>1）访问&lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>Visual Studio Code官网&lt;/a>&lt;/p>
&lt;p>2）选择适用于你的电脑系统的版本下载。&lt;p>
&lt;p>3）运行安装程序：按照提示进行安装。在Windows上，点击“Next”点到底，接受许可协议，并选择安装位置（可以自定义安装在哪个盘，避免让c盘负担过重）。&lt;p>
&lt;p>4）启动VSCode： 安装完成后，你可以在开始菜单（Windows）中找到Visual Studio Code。双击启动它，就会看到一个编辑器界面。之后修改博客的代码文件时，只要右键选择“打开方式”-选择vscode即可。&lt;/p>
&lt;h2 id="安装-hugo">安装 Hugo&lt;/h2>
&lt;p>&lt;strong>何为Hugo？&lt;/strong>&lt;/p>
&lt;p>Hugo就是我们用来生成静态博客网页的网站生成器，我们可以用前面安装的Git通过代码的配合，将想要呈现的内容转换为HTML网页。&lt;/p>
&lt;p>&lt;strong>Hugo安装步骤：&lt;/strong>&lt;/p>
&lt;p>1）访问 &lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>Hugo GitHub Releases&lt;/a> 页面。&lt;/p>
&lt;p>2）在 Assets 下找到适合 Windows 的 ZIP 文件（通常是 hugo_extended_X.XX.X_windows-64bit.zip）。&lt;/p>
&lt;p>3）下载 ZIP 文件，并解压到一个你喜欢的磁盘里。&lt;/p>
&lt;h3 id="重要添加环境变量">（重要！）添加环境变量&lt;/h3>
&lt;p>解压得到的 hugo.exe 文件的路径一定要添加到系统的 PATH 变量中，否则有时写代码时会出现访问不了 Hugo的情况。&lt;/p>
&lt;p>添加环境变量步骤：&lt;/p>
&lt;p>1）获取 Hugo 的执行文件路径：  &lt;/p>
&lt;p>用wins+E快捷键打开 File Explorer（文件资源管理器），找到你解压 Hugo ZIP 文件的地方，找到 hugo.exe 文件；&lt;/p>
&lt;p>鼠标点击上方的栏目，变成光标即可看到你的 hugo.exe 的完整路径，比如 D:\Downloads\Hugo。&lt;/p>
&lt;img src="https://springcecilia.blog/images/Untitled.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;img src="https://springcecilia.blog/images/Untitled 1.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;p>2）打开系统环境变量设置：  &lt;/p>
&lt;p>右键点击计算机图标，选择 &amp;ldquo;属性&amp;rdquo;。&lt;/p>
&lt;img src="https://springcecilia.blog/images/Untitled 2.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;p>在面板中找到 &amp;ldquo;高级系统设置&amp;rdquo;。&lt;/p>
&lt;img src="https://springcecilia.blog/images/Untitled 3.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;p>在打开的窗口中，点击 &amp;ldquo;环境变量&amp;rdquo; 按钮。&lt;/p>
&lt;img src="https://springcecilia.blog/images/Untitled 4.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;p>3）编辑系统 PATH 变量：  &lt;/p>
&lt;p>在环境变量的面板中，找到下方的 &amp;ldquo;系统变量&amp;rdquo; 部分，选中 &amp;ldquo;Path&amp;rdquo; 变量点击 &amp;ldquo;编辑&amp;rdquo; 按钮。&lt;/p>
&lt;img src="https://springcecilia.blog/images/Untitled 5.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;p>3）添加 Hugo 可执行文件路径：  &lt;/p>
&lt;p>在 &amp;ldquo;编辑环境变量&amp;rdquo; 窗口中，点击右上方第一个 &amp;ldquo;新建&amp;rdquo; 按钮。
输入 前面你复制的Hugo 执行文件的路径（例如，D:\Downloads\Hugo）。
确认并关闭所有打开的窗口。&lt;/p>
&lt;p>4）验证是否添加成功：  &lt;/p>
&lt;p>在Windows 操作系统中，在任务栏的搜索框中，键入
&amp;ldquo;cmd&amp;rdquo; 或 &amp;ldquo;命令提示符&amp;rdquo;。
&lt;img src="https://springcecilia.blog/images/Untitled 6.png" alt="Alt Text" style="width: 600px; height: auto;">
或者是按下快捷键 Win + R ，打开运行面板，在里面输入cmd就可以弹出命令提示符的面板
&lt;img src="https://springcecilia.blog/images/Untitled 7.png" alt="Alt Text" style="width: 600px; height: auto;">&lt;/p>
&lt;p>在命令提示符的面板输入 hugo version ，然后按回车。
如果安装成功，你应该能够看到 Hugo 的版本信息，表示安装成功。&lt;/p>
&lt;p>通过以上步骤，你就成功将 Hugo可执行文件的路径添加到系统的 PATH 变量中。这样，你可以在任何地方使用命令提示符运行Hugo。如果出现问题，记得检查你的路径是否正确。&lt;/p>
&lt;h2 id="安装go语言">安装go语言&lt;/h2>
&lt;p>Hugo 是使用 Go 语言开发的静态网站生成器，因此在运行 Hugo 之前，确保 Go 语言环境已经安装。&lt;/p>
&lt;p>&lt;strong>安装步骤：&lt;/strong>&lt;/p>
&lt;p>1）打开 &lt;a class="link" href="https://www.notion.so/by-mealin564-7e0ddfb6240347328003ea868799da39?pvs=21" target="_blank" rel="noopener"
>Go 的官网&lt;/a>&lt;a class="link" href="https://golang.org/dl/%E3%80%82" target="_blank" rel="noopener"
>。&lt;/a>&lt;/p>
&lt;p>2）选择适合你电脑的 Windows 最新版本，然后选择带有 &lt;strong>.msi 后缀&lt;/strong>的安装程序下载&lt;/p>
&lt;p>3） 双击下载的安装程序（.msi 文件），然后按提示操作。你可以接受默认设置，也可以根据需要进行自定义配置。&lt;/p>
&lt;p>4）检查安装： 安装完成后，打开命令提示符或 PowerShell 窗口，并运行以下命令来验证 Go 是否正确安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">go&lt;/span> &lt;span class="nx">version&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果一切正常，你应该看到 Go 的版本信息。&lt;/p>
&lt;p>注：&lt;/p>
&lt;p>在安装 Go 语言时，确保将 Go 的 bin 目录添加到系统的 PATH 环境变量中，以便在命令行中直接运行 go 命令。&lt;/p>
&lt;p>若没有添加，你需要手动将 C:\Go\bin（或你选择安装的路径）添加到 PATH 中（步骤和上述操作相似）。
安装完成后，你就可以在 Windows 上使用 Go 语言了&lt;/p>
&lt;h1 id="2创建博客">2.创建博客&lt;/h1>
&lt;h2 id="打开git-bash">打开Git Bash&lt;/h2>
&lt;p>新建一个你想要放博客内容和修改样式的文件，右键单击并选择 &amp;ldquo;Git Bash Here&amp;rdquo;。  
&lt;img src="https://springcecilia.blog/images/Untitled 8.png" alt="Alt Text" style="width: 600px; height: auto;">&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>创建 Hugo 站点，输入代码：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">hugo&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">site&lt;/span> &lt;span class="nx">myblog&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这将在这个路径创建一个新博客。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>进入博客目录，输入代码：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">cd&lt;/span> &lt;span class="nx">myblog&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Tips代码指令解释&lt;/strong>&lt;/p>
&lt;p>1.查看当前目录：
在 Git Bash 终端中，可以输入以下命令来查看当前所在的目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">pwd&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这会显示当前文件夹的完整路径。&lt;/p>
&lt;p>2.进入博客目录（就是找到你新建的那个要放博客内容的那个文件）， 假设你的博客文件夹名为 myblog，你可以执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">cd&lt;/span> &lt;span class="nx">myblog&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果博客文件夹不在当前工作目录，你需要替换成完整路径，例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">cd&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">blog&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">myblog&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如，这个就是我的博客文件的“根目录路径”↑&lt;/p>
&lt;p>3.验证是否成功进入博客目录：
输入 pwd 命令确认当前工作目录是否为你的博客目录。
使用 ls 命令查看博客目录中的文件和子目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">ls&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过这些步骤，你就能够在 Git Bash 中成功进入 Hugo 博客的目录。&lt;/p>
&lt;p>注（基础操作知识）：在Git Bash界面里输代码时，    &lt;/p>
&lt;pre>&lt;code>$： 一般用户的默认提示符。
#： 超级用户（root）的默认提示符。
对于默认用户，通常显示 $。
在 Bash 中输入 cd 命令时，不用管前面的 $，只要复制上述的代码输入就行！
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h1 id="3配置hugo主题模板">3.配置Hugo主题模板&lt;/h1>
&lt;h2 id="选择主题">选择主题&lt;/h2>
&lt;p>在&lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>Hugo Themes&lt;/a>网站上选择一个喜欢的主题。&lt;/p>
&lt;p>在该主题的详情页面找到download，跳转到 GitHub 界面，点击绿色的按键code。&lt;/p>
&lt;p>方法1：直接连接github（坑：有时会因防火墙问题配置失败，不推荐！！）&lt;/p>
&lt;p>方法2：SSH密钥法链接（坑： .gitmodules 文件中的行尾符 (line endings) 与系统默认设置不一致，可能导致在 Windows 系统上的一些问题，所以也不推荐！！）&lt;/p>
&lt;p>&lt;strong>（所以推荐）方法3：直接点击绿色code按键下方的Download Zip，下载github仓库zip压缩包到你的博客文件夹的themes文件夹里。&lt;/strong>&lt;/p>
&lt;img src="https://springcecilia.blog/images/Untitled 9.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;img src="https://springcecilia.blog/images/Untitled 10.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;h2 id="在博客目录中添加主题">在博客目录中添加主题&lt;/h2>
&lt;p>将下载的 ZIP 文件在博客文件夹的themes 文件夹中右键解压&lt;/p>
&lt;p>&lt;strong>编辑主题配置文件：&lt;/strong>&lt;/p>
&lt;p>打开博客根目录（即你的博客文件夹）中的 config.toml 或者config.yaml文件，这是 Hugo 的配置文件。 &lt;/p>
&lt;p>在文件中添加或修改与主题相关的配置段，需要根据主题的文档查看如何配置。&lt;/p>
&lt;p>config文件主要改动的是你想要的博客模板，比如你的主页标题、导航栏文字、链接地址、语言、版权信息、url等等。&lt;/p>
&lt;p>可以参考主题文件里的示例配置文件，例如 exampleSite文件夹里的config.toml 或 config.yaml，也可以自己google搜索“你的hugo主题名+装修”，看看其他博主的博客装修步骤记录和教程。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>注：编辑config文件时，baseURL应该填什么？&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>baseURL 是 Hugo 博客网站的基本网址链接，帮你生成网站。&lt;/p>
&lt;p>当你还没购买域名，在本地修改博客测试时，可以将 baseURL 设置为本地服务器的地址，通常是 &lt;a class="link" href="http://localhost:1313/%EF%BC%8C%E8%BF%99%E6%A0%B7%E5%8F%AF%E7%A1%AE%E4%BF%9D%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88%E3%80%82" target="_blank" rel="noopener"
>http://localhost:1313/&lt;/a>
这样可确保本地同步预览。将代码换成以下↓&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">code&lt;/span> &lt;span class="nx">baseURL&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;[http://localhost:1313/](http://localhost:1313/)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当你有购买的域名和托管的网址时，可将 baseURL 设置为相应的域名。如果你使用自定义域名，确保包括协议（https 或 http）。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">code&lt;/span> &lt;span class="nx">baseURL&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;[https://www.这里填入你的域名.com/](https://www.yourdomain.com/)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>总之，根据你的实际情况和计划，选择适当的 baseURL 设置。在网站发布之前，确保在本地测试环境中检查生成的链接是否正确。&lt;/p>
&lt;h2 id="保存配置文件">保存配置文件&lt;/h2>
&lt;p>修改好文件后，Ctrl+S 保存对 config.toml 文件的修改。&lt;/p>
&lt;h1 id="四运行-hugo">四.运行 Hugo&lt;/h1>
&lt;p>在博客根目录运行 Hugo，右键点击你的博客根目录（博客文件），选择git bash here，在git里输入以下代码：&lt;/p>
&lt;pre tabindex="0">&lt;code>hugo server -D
&lt;/code>&lt;/pre>&lt;p>如果成功会显示如下：  
&lt;img src="https://springcecilia.blog/images/Untitled 11.png" alt="Alt Text" style="width: 600px; height: auto;">&lt;/p>
&lt;p>然后你就可以在 &lt;a class="link" href="http://localhost:1313/%EF%BC%8C%E8%BF%99%E6%A0%B7%E5%8F%AF%E7%A1%AE%E4%BF%9D%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88%E3%80%82" target="_blank" rel="noopener"
>http://localhost:1313/&lt;/a>中预览网站，查看是否成功应用了主题的配置和样式哦。&lt;/p></description></item><item><title>发布文章测试帖</title><link>https://springcecilia.blog/my-first-post/</link><pubDate>Fri, 08 Dec 2023 17:19:10 +0800</pubDate><guid>https://springcecilia.blog/my-first-post/</guid><description>&lt;p>密码：花的日语罗马音（四个字母）&lt;/p>
&lt;div id="verification" style=" display: flex;
flex-direction: column;
align-items: center;
margin-top: 20vh;">
&lt;div id="entry-box">
&lt;div id="secret-word" style=" font-size: 1.5rem;
margin-bottom: 1rem;">Unlock to view this content.&lt;/div>
&lt;form id="password-form" onsubmit="checkPassword(); return false;" style=" display: flex;
flex-direction: column;
width: auto;">
&lt;input type="password" name="password" id="password" placeholder="Please enter password" required style="margin-bottom: 1.5rem;
padding: 10px 20px;">
&lt;input type="hidden" name="encryptedPassword" id="encrypted-password">
&lt;input type="submit" value="Submit" name="submit" id="secret-submit" style=" padding: 10px 20px;
cursor: pointer;" onmouseover="this.style.backgroundColor='#FAB005';"
onmouseout="this.style.backgroundColor='';">
&lt;/form>
&lt;/div>
&lt;div id="secret" style="display: none" password="hana">
&lt;!-- 这里放置需要加密的内容 -->
测试发布带图文章：
![图1](/blog/myblog/static/img/1.png)
调整大小：
&lt;img src="https://springcecilia.blog/images/1.png" alt="Alt Text" style="width: 600px; height: auto;">
&lt;/div>
&lt;/div></description></item></channel></rss>