[{"content":"发布纯文字的文章 在命令行中创建新文章 打开终端，导航到你的 Hugo 项目根目录，并运行以下命令：\nhugo new posts/my-first-post.md\n这会在 content/posts/ 目录下创建一个名为 my-first-post.md 的 Markdown 文件。\n编辑文章内容 使用文本编辑器（比如VSCode）打开 content/posts/my-first-post.md 文件，然后编辑文章内容。\nMarkdown 文件的开头通常包括一些元数据，比如标题、日期、标签等。\n例如：\n\u0026mdash; title: \u0026ldquo;我的第一篇博客\u0026rdquo;\ndate: 2023-11-30T09:00:00+00:00\ndraft: false\ntags: [\u0026ldquo;Hugo\u0026rdquo;, \u0026ldquo;博客\u0026rdquo;]\ncategories: [\u0026ldquo;技术\u0026rdquo;]\n这是我的第一篇博客文章，使用 Hugo 搭建的博客系统。\n其中，draft: false 表示这篇文章不是草稿，将被发布。你可以在编辑完文章后保存文件。\n运行 Hugo 本地服务器进行预览 在终端中运行以下命令：\nhugo server -D -D 选项用于显示草稿（如果有）。\n然后，打开浏览器，访问 http://localhost:1313/\n你应该能够在本地预览你的博客，包括新创建的文章。\n如果在预览中一切正常，你可以停止 Hugo 服务器，并运行以下命令来生成静态文件：\nhugo\n这会在项目根目录生成一个 public/ 目录，里面包含了你整个博客的静态文件。\n你可以将这些文件上传到你的 Web 服务器或者托管服务上，使其在互联网上可访问。\n# 如果使用 Git，可以添加并提交生成的文件\ngit add .\ngit commit -m \u0026ldquo;Add my first post\u0026rdquo;\n然后，再将 public/ 目录的内容部署到你的服务器上。\n修改已经发布的 Hugo 文章 你需要编辑该文章的 Markdown 文件，然后重新生成静态文件并部署：\n找到文章：\n在 Hugo 项目的 content/posts/ 目录下找到你想修改的文章，以 .md 为扩展名。\n编辑文章内容：\n使用文本编辑器打开文章的 Markdown 文件，对内容进行修改。\n你可以更新标题、正文、标签、日期等信息。保存文件。\n运行 Hugo 本地服务器进行预览：\n在终端中运行以下命令：\nhugo server -D\n打开浏览器，访问 http://localhost:1313/\n查看你的修改是否生效。在预览中确认无误后，你可以继续下一步部署。 发布带图文章 在 Hugo 中发布带有图片的文章需要你在 Markdown 文件中使用正确的语法来插入图片。\n准备图片：\n确保你的图片已经放置在 Hugo 项目中的 static 目录下，或者在 Markdown 文件所在的目录中。 例如，如果你有一张图片 my-image.jpg，可以将其放在 static/images/ 目录下。\n使用 Markdown 插入图片：\n在文章的 Markdown 文件中，使用以下语法插入图片： 在这里，Alt Text 是图片的替代文本，括号里是图片的路径。请根据实际情况调整路径。 如果你的图片位于 Markdown 文件所在目录，可以直接使用相对路径。\n指定图片大小（可选）：\n如果需要指定图片的大小，可以使用 HTML 的 width 和 height 属性。\n例如：（注：输入下列代码两边要加英文输入法状态下的\u0026lt;\u0026gt;） imgsrc=\u0026quot;/img/hugo version.png\u0026quot;alt=\u0026ldquo;Alt Text\u0026quot;width=\u0026ldquo;300\u0026quot;height=\u0026ldquo;200\u0026rdquo; 或者相对路径的情况下： imgsrc=\u0026ldquo;my-image.jpg\u0026quot;alt=\u0026ldquo;Alt Text\u0026quot;width=\u0026ldquo;300\u0026quot;height=\u0026ldquo;200\u0026rdquo; 这将使图片显示为指定的宽度和高度。\n显示如下：\n调整大小：\n运行 Hugo 本地服务器进行预览：\n在终端中运行以下命令： hugo server -D 打开浏览器，访问 http://localhost:1313/\n查看你的修改是否生效。在预览中确认无误后，你可以继续下一步部署。\n","date":"2023-12-09T17:34:26+08:00","permalink":"https://Cecilia404404.github.io/%E5%BB%BA%E7%AB%992%E5%9C%A8Hugo%E4%B8%AD%E5%8F%91%E5%B8%83%E5%86%85%E5%AE%B9/","title":"【建站2】在Hugo中发布内容"},{"content":"说明：此为针对小白的傻瓜式教程。\n一.前期准备 安装 Git: 访问 Git 官网 下载 Git 的最新版本。 执行下载的安装程序，并按照提示进行安装。在 \u0026ldquo;Select Components\u0026rdquo; 阶段，确保选中 \u0026ldquo;Git Bash Here\u0026rdquo; 选项。\n安装 Hugo: 访问 Hugo GitHub Releases 页面。 在 Assets 下找到适合 Windows 的 ZIP 文件（通常是 hugo_extended_X.XX.X_windows-64bit.zip）。 下载 ZIP 文件，并解压到一个你喜欢的目录中（比如 C:\\Hugo）。\n（重要！）添加环境变量:\n将解压得到的 hugo.exe 文件的路径（比如 C:\\Hugo\\hugo.exe）添加到系统的 PATH 变量中，以便在任何地方都能够在命令提示符中访问 Hugo。\n在 Windows 上将 Hugo可执行文件的路径添加到系统的 PATH 变量中可以通过以下步骤完成：\n获取 Hugo 可执行文件路径：\n打开 File Explorer（资源管理器），导航到你解压 Hugo ZIP 文件的目录。 找到 hugo.exe 文件。记住 hugo.exe 的完整路径， 比如 C:\\Hugo\\hugo.exe。\n打开系统环境变量设置：\n右键点击计算机（桌面上或开始菜单中），选择 \u0026ldquo;属性\u0026rdquo;。 在左侧面板中，点击 \u0026ldquo;高级系统设置\u0026rdquo;。 在打开的窗口中，点击 \u0026ldquo;环境变量\u0026rdquo; 按钮。\n编辑系统 PATH 变量：\n在环境变量窗口中，找到 \u0026ldquo;系统变量\u0026rdquo; 部分，找到并选中 \u0026ldquo;Path\u0026rdquo; 变量，然后点击 \u0026ldquo;编辑\u0026rdquo; 按钮。\n添加 Hugo 可执行文件路径：\n在 \u0026ldquo;编辑环境变量\u0026rdquo; 窗口中，点击 \u0026ldquo;新建\u0026rdquo; 按钮。 输入 Hugo 可执行文件的完整路径（例如，C:\\Hugo）。 确认并关闭所有打开的窗口。\n验证是否添加成功：\n打开命令提示符（Command Prompt）\n在Windows 操作系统中，你可以通过以下步骤打开命令提示符：\n在任务栏的搜索框中，键入 \u0026ldquo;cmd\u0026rdquo; 或 \u0026ldquo;命令提示符\u0026rdquo;。\n从搜索结果中选择 \u0026ldquo;命令提示符\u0026rdquo; 或 \u0026ldquo;Command Prompt\u0026rdquo;。\n运行对话框。 **或**：按下 Win + R 组合键，打开运行对话框。 输入\u0026quot;cmd\u0026quot; 或 \u0026quot;cmd.exe\u0026quot;，然后按 Enter 键。 无论你使用哪种方法，都会打开一个命令提示符窗口，你可以在其中输入命令。在这个窗口中，你可以执行各种命令和操作系统交互。\n输入 hugo version 并按回车键。 如果安装成功，你应该能够看到 Hugo 的版本信息，表示安装成功。\n通过这些步骤，你就成功将 Hugo可执行文件的路径添加到系统的 PATH 变量中了。这样，你可以在任何地方使用命令提示符运行Hugo。如果有任何问题，记得检查路径是否正确，确保没有拼写错误。\n二.创建博客 打开Git Bash： 在你想要创建博客的文件夹中，右键单击并选择 \u0026quot;Git Bash Here\u0026quot;。 创建 Hugo 站点，输入代码： hugo new site myblog 这将在当前目录创建一个名为 myblog 的新博客。\n进入博客目录，输入代码： cd myblog\nTips代码指令解释：\n1.查看当前目录： 在 Git Bash 终端中，可以输入以下命令来查看当前所在的目录： pwd 这会显示当前工作目录的完整路径。\n2.进入博客目录： 使用 cd 命令来进入博客目录。假设你的博客目录名为 myblog，你可以执行以下命令： cd myblog\n如果博客目录不在当前工作目录，你需要替换成完整路径，例如： cd /d/blog/myblog 这个就是根目录路径↑ 3.验证是否成功进入博客目录： 输入 pwd 命令确认当前工作目录是否为你的博客目录。 使用 ls 命令查看博客目录中的文件和子目录： ls 通过这些步骤，你就能够在 Git Bash 中成功进入 Hugo 博客的目录。\n*注：在 Bash 里，\n$： 一般用户的默认提示符。 #： 超级用户（root）的默认提示符。 对于默认用户，通常显示 $。 当你在 Bash 中输入 cd 命令时，你不需要管前面的 $。 你只需在 cd 后面加上目标目录的路径即可。 三.配置Hugo主题模板 选择主题：\n在 Hugo 中，主题通常以 Git 存储库的形式存在。你可以从Hugo Themes网站上选择一个主题。\n在该主题的详情页面找到download跳转到 GitHub 界面，点击绿色的按键code便可复制git链接。\n在博客目录中添加主题作为子模块：\n方法1：直接连接github（坑：有时候因为防火墙问题会配置失败，不推荐！！）\n方法2：SSH密钥法链接（坑： .gitmodules 文件中的行尾符 (line endings) 与你的系统默认设置不一致，可能导致在 Windows 系统上的一些问题，所以也不推荐！！）\n（推荐）方法3：直接下载github仓库zip压缩包到themes文件夹解压（这个方法最保险）\n将下载的 ZIP 文件解压缩到你的 Hugo 项目的 themes 文件夹中。\n复制 themes 文件夹里的 exampleSite 中的文件：\n进入主题的文件夹，找到 exampleSite 文件夹。\n选择性复制文件：\n根据你的需要选择性地复制 exampleSite 文件夹中的文件到你的博客根目录。可能包括配置文件（如 config.toml、config.yaml 或 config.json）、内容文件、静态文件等。\n*注意文件路径：确保将文件复制到正确的位置。配置文件通常应该放在博客根目录，而内容文件可能需要根据主题的要求放在特定的文件夹中。\n*保留原有内容：在复制之前，建议备份你当前博客根目录中的重要文件，以免不小心覆盖。你可以将当前博客根目录的文件夹重命名或者备份到其他位置。\n编辑主题配置文件：\n打开博客根目录中的 config.toml 文件，这是 Hugo 的配置文件。\n在文件中找到或添加一个与主题相关的配置段。你可能需要根据主题的文档查看如何配置。\n查找示例配置文件：\n在主题目录中，通常会有一个示例配置文件，例如 exampleSite/config.toml 或 exampleSite/config.yaml，具体文件名可能会有所不同。\n复制示例配置文件到博客根目录：\n使用以下命令将示例配置文件复制到博客根目录。\n如果示例配置文件是 config.yaml，则相应地更改文件名。\n返回到博客根目录：\n使用以下命令返回到博客根目录：\ncd /d/blog/myblog\n配置其他设置：\n仍然在 config.toml 文件中，你可能需要配置其他与博客相关的设置，如标题、作者、语言等。根据主题文档和你自己的需求进行配置。\n*注：编辑config文件时，baseURL应该填什么？\nbaseURL 是 Hugo 网站的基本 URL 地址，它用于生成网站中的链接。正确配置 baseURL 对于确保生成的网站链接的正确性非常重要。\n以下是设置 baseURL 的一些建议：\n本地开发：\n当你在本地开发时，可以将 baseURL 设置为本地服务器的地址，通常是 http://localhost:1313/。这样可以确保在本地预览时，生成的链接正确。\ncode baseURL= \u0026ldquo;http://localhost:1313/\u0026rdquo;\n线上发布：\n当你准备发布网站时，将 baseURL 设置为你实际的域名或者托管服务的地址。如果你使用自定义域名，确保包括协议（https 或 http）。\ncode baseURL= \u0026ldquo;https://www.yourdomain.com/\u0026rdquo;\n子路径或子目录：\n如果你计划将网站发布到子路径或子目录下，确保在 baseURL 中包含子路径。 例如，如果你将网站放在 https://www.yourdomain.com/blog/ 下：\ncode baseURL= \u0026ldquo;https://www.yourdomain.com/blog/\u0026rdquo;\n相对路径：\n在某些情况下，你可以使用相对路径。这对于将网站嵌套在其他网页中的情况可能有用。例如： code baseURL= \u0026ldquo;/\u0026rdquo;\n确保在设置 baseURL 时考虑到你的网站将来可能的发布位置以及你是否使用了 HTTPS。如果你的网站使用 HTTPS，请确保 baseURL 中的协议是 https://。\n总之，根据你的实际情况和计划，选择适当的 baseURL 设置。在网站发布之前，确保在本地测试环境中检查生成的链接是否正确。\n保存配置文件：\nCtrl+S保存对 config.toml 文件的修改。\n四.运行 Hugo 在博客根目录运行 Hugo，查看是否成功应用了主题的配置和样式。 hugo server -D ","date":"2023-12-08T17:34:26+08:00","permalink":"https://Cecilia404404.github.io/%E5%BB%BA%E7%AB%991Hugo%E9%85%8D%E7%BD%AE%E4%B8%BB%E9%A2%98%E5%8F%8A%E7%94%9F%E6%88%90/","title":"【建站1】Hugo配置主题及生成"}]